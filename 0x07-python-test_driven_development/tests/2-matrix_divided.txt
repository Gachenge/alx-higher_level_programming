matrix_divided
==============

Prototype: def matrix_divided(matrix, div)
divide each element of a matrix with div.
matrix must be matrix of ints or floats, div must be non-zero number
Return matrix_divided

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix = [[4, 5, 6], [5, 'h', 7]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[3, 5, 6], [4, 6, 7]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 'k')
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix = [[1, 2, 3, 4], [2, 3, 4]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, None)
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix = [[]]
>>> matrix_divided(matrix, 3)
[[]]
